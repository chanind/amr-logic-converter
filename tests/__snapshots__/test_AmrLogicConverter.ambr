# name: test_convert_amr_can_replace_instances_with_variables
  And(args=(Predicate(value='dry-01', args=(Variable(name='e'),), alignment=None), Predicate(value=':ARG0', args=(Variable(name='e'), Variable(name='x')), alignment=None), Predicate(value=':ARG1', args=(Variable(name='e'), Variable(name='z')), alignment=None), Predicate(value='person', args=(Variable(name='x'),), alignment=None), Not(body=And(args=(Predicate(value=':ARG0', args=(Variable(name='g'), Variable(name='x')), alignment=None), Predicate(value='giggle-01', args=(Variable(name='g'),), alignment=None)))), Predicate(value='dog', args=(Variable(name='z'),), alignment=None), Predicate(value=':ARG0', args=(Variable(name='w'), Variable(name='z')), alignment=None), Predicate(value='wash-01', args=(Variable(name='w'),), alignment=None), Predicate(value=':ARG1', args=(Variable(name='w'), Variable(name='z')), alignment=None)))
# ---
# name: test_convert_amr_leaves_off_existential_quantifiers_by_default
  And(args=(Predicate(value='dry-01', args=(Constant(value='e', type='instance', alignment=None),), alignment=None), Predicate(value=':ARG0', args=(Constant(value='e', type='instance', alignment=None), Constant(value='x', type='instance', alignment=None)), alignment=None), Predicate(value=':ARG1', args=(Constant(value='e', type='instance', alignment=None), Constant(value='z', type='instance', alignment=None)), alignment=None), Predicate(value='person', args=(Constant(value='x', type='instance', alignment=None),), alignment=None), Not(body=And(args=(Predicate(value=':ARG0', args=(Constant(value='g', type='instance', alignment=None), Constant(value='x', type='instance', alignment=None)), alignment=None), Predicate(value='giggle-01', args=(Constant(value='g', type='instance', alignment=None),), alignment=None)))), Predicate(value='dog', args=(Constant(value='z', type='instance', alignment=None),), alignment=None), Predicate(value=':ARG0', args=(Constant(value='w', type='instance', alignment=None), Constant(value='z', type='instance', alignment=None)), alignment=None), Predicate(value='wash-01', args=(Constant(value='w', type='instance', alignment=None),), alignment=None), Predicate(value=':ARG1', args=(Constant(value='w', type='instance', alignment=None), Constant(value='z', type='instance', alignment=None)), alignment=None)))
# ---
# name: test_convert_amr_with_alignment_markers
  Exists(param=Variable(name='e'), body=And(args=(Predicate(value='give-01', args=(Variable(name='e'),), alignment=Alignment((2,))), Exists(param=Variable(name='x'), body=And(args=(Predicate(value=':ARG0', args=(Variable(name='e'), Variable(name='x')), alignment=None), Predicate(value='person', args=(Variable(name='x'),), alignment=None), Predicate(value=':named', args=(Variable(name='x'), Constant(value='Ms Ribble', type='string', alignment=Alignment((2,)))), alignment=None)))), Exists(param=Variable(name='y'), body=And(args=(Predicate(value=':ARG2', args=(Variable(name='e'), Variable(name='y')), alignment=None), Predicate(value='child', args=(Variable(name='y'),), alignment=Alignment((3,)))))), Exists(param=Variable(name='z'), body=And(args=(Predicate(value=':ARG1', args=(Variable(name='e'), Variable(name='z')), alignment=None), Predicate(value='envelope', args=(Variable(name='z'),), alignment=Alignment((4,)))))))))
# ---
