# name: test_convert_amr_can_replace_instances_with_variables
  And(args=(Atom(predicate=Predicate(symbol='dry-01', alignment=None), terms=(Variable(name='e'),)), Atom(predicate=Predicate(symbol=':ARG0', alignment=None), terms=(Variable(name='e'), Variable(name='x'))), Atom(predicate=Predicate(symbol='person', alignment=None), terms=(Variable(name='x'),)), Not(body=And(args=(Atom(predicate=Predicate(symbol=':ARG0', alignment=None), terms=(Variable(name='g'), Variable(name='x'))), Atom(predicate=Predicate(symbol='giggle-01', alignment=None), terms=(Variable(name='g'),))))), Atom(predicate=Predicate(symbol=':ARG1', alignment=None), terms=(Variable(name='e'), Variable(name='z'))), Atom(predicate=Predicate(symbol='dog', alignment=None), terms=(Variable(name='z'),)), Atom(predicate=Predicate(symbol=':ARG0', alignment=None), terms=(Variable(name='w'), Variable(name='z'))), Atom(predicate=Predicate(symbol='wash-01', alignment=None), terms=(Variable(name='w'),)), Atom(predicate=Predicate(symbol=':ARG1', alignment=None), terms=(Variable(name='w'), Variable(name='z')))))
# ---
# name: test_convert_amr_leaves_off_existential_quantifiers_by_default
  And(args=(Atom(predicate=Predicate(symbol='dry-01', alignment=None), terms=(Constant(value='e', type='instance', alignment=None),)), Atom(predicate=Predicate(symbol=':ARG0', alignment=None), terms=(Constant(value='e', type='instance', alignment=None), Constant(value='x', type='instance', alignment=None))), Atom(predicate=Predicate(symbol='person', alignment=None), terms=(Constant(value='x', type='instance', alignment=None),)), Not(body=And(args=(Atom(predicate=Predicate(symbol=':ARG0', alignment=None), terms=(Constant(value='g', type='instance', alignment=None), Constant(value='x', type='instance', alignment=None))), Atom(predicate=Predicate(symbol='giggle-01', alignment=None), terms=(Constant(value='g', type='instance', alignment=None),))))), Atom(predicate=Predicate(symbol=':ARG1', alignment=None), terms=(Constant(value='e', type='instance', alignment=None), Constant(value='z', type='instance', alignment=None))), Atom(predicate=Predicate(symbol='dog', alignment=None), terms=(Constant(value='z', type='instance', alignment=None),)), Atom(predicate=Predicate(symbol=':ARG0', alignment=None), terms=(Constant(value='w', type='instance', alignment=None), Constant(value='z', type='instance', alignment=None))), Atom(predicate=Predicate(symbol='wash-01', alignment=None), terms=(Constant(value='w', type='instance', alignment=None),)), Atom(predicate=Predicate(symbol=':ARG1', alignment=None), terms=(Constant(value='w', type='instance', alignment=None), Constant(value='z', type='instance', alignment=None)))))
# ---
# name: test_convert_amr_with_alignment_markers
  Exists(param=Variable(name='e'), body=And(args=(Atom(predicate=Predicate(symbol='give-01', alignment=Alignment((2,))), terms=(Variable(name='e'),)), Exists(param=Variable(name='x'), body=And(args=(Atom(predicate=Predicate(symbol=':ARG0', alignment=None), terms=(Variable(name='e'), Variable(name='x'))), Atom(predicate=Predicate(symbol='person', alignment=None), terms=(Variable(name='x'),)), Atom(predicate=Predicate(symbol=':named', alignment=None), terms=(Variable(name='x'), Constant(value='Ms Ribble', type='string', alignment=Alignment((2,)))))))), Exists(param=Variable(name='y'), body=And(args=(Atom(predicate=Predicate(symbol=':ARG2', alignment=None), terms=(Variable(name='e'), Variable(name='y'))), Atom(predicate=Predicate(symbol='child', alignment=Alignment((3,))), terms=(Variable(name='y'),))))), Exists(param=Variable(name='z'), body=And(args=(Atom(predicate=Predicate(symbol=':ARG1', alignment=None), terms=(Variable(name='e'), Variable(name='z'))), Atom(predicate=Predicate(symbol='envelope', alignment=Alignment((4,))), terms=(Variable(name='z'),))))))))
# ---
